
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 0  // GPIO0
Adafruit_SSD1306 display(OLED_RESET);

#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2

// http://javl.github.io/image2cpp/

const unsigned char fablab [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xe0, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x07, 0xe0, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x83, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x39, 0xff, 0xe0, 0x7f, 0xc0, 0x00, 
  0x00, 0x00, 0x20, 0xff, 0xf0, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x40, 0x7f, 0xf0, 0x1f, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x7f, 0xf0, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x80, 0x7f, 0xf0, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0x80, 0x7f, 0xf0, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x80, 0x3f, 0xe0, 0x07, 0xe0, 0x00, 
  0x00, 0x01, 0x80, 0x1f, 0xc0, 0x07, 0xe0, 0x00, 0x00, 0x01, 0x80, 0x03, 0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x01, 0x80, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x03, 0x80, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x0f, 0xe0, 0x00, 
  0x00, 0x03, 0x87, 0x00, 0x03, 0x1f, 0xe0, 0x00, 0x00, 0x07, 0x8f, 0x80, 0x07, 0xff, 0xe0, 0x00, 
  0x00, 0x07, 0x8f, 0xc0, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x07, 0x8f, 0xe0, 0x1f, 0xff, 0xe0, 0x00, 
  0x00, 0x07, 0x8f, 0xe0, 0x1f, 0xff, 0xe0, 0x00, 0x00, 0x0f, 0x8f, 0xf0, 0x3f, 0xff, 0xc0, 0x00, 
  0x00, 0x0f, 0x8f, 0xf0, 0x3f, 0xe7, 0xc0, 0x00, 0x00, 0x0f, 0x8f, 0xf0, 0x3f, 0xc7, 0xc0, 0x00, 
  0x00, 0x0f, 0x8f, 0xf0, 0x3f, 0xc7, 0x80, 0x00, 0x00, 0x0f, 0x87, 0xf0, 0x3f, 0x87, 0x80, 0x00, 
  0x00, 0x0f, 0x87, 0xf0, 0x3f, 0x87, 0x00, 0x00, 0x00, 0x0f, 0x87, 0xf0, 0x3f, 0x86, 0x00, 0x00, 
  0x00, 0x0f, 0x83, 0xf0, 0x3f, 0x06, 0x00, 0x00, 0x00, 0x1f, 0x83, 0xf0, 0x3e, 0x04, 0x00, 0x00, 
  0x00, 0x1f, 0xc3, 0xe0, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x0f, 0xe3, 0xe0, 0x00, 0x30, 0x00, 0x00, 
  0x00, 0x0f, 0xfb, 0xc0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xc0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xc0, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x1c, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xf0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xfd, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   
};

void setup()   {
  Serial.begin( 9600 );

  display.begin( SSD1306_SWITCHCAPVCC, 0x3C );  // initialize with the I2C addr 0x3C (for the 64x48)
  display.clearDisplay();

  // stampa larghezza x altezza
  display.setTextColor( WHITE );
  display.setCursor( 0, 0 );
  display.setTextSize( 2 );
  display.print( String(display.width()) + "x" + String(display.height()) );
  delay( 2000 );
  display.clearDisplay();
  delay( 300 );

  // Disegna una X grande come lo schermo
  display.drawLine(0, 1, display.width(), display.height()-1, WHITE);
  display.drawLine(display.width(), 0, 0, display.height()-1, WHITE);
  display.display();
  delay(2000);
  display.clearDisplay();
  delay(300);
  
  // Disegna un rettangolo
  // x start (parte da zero)
  // y start (parte da 1) (non so perchÃ¨!!)
  // x len (partendo da zero, va bene mettere width)
  // y len (partendo da 1, l'ultimo pixel risulta height - 1
  display.drawRect(0, 1, display.width(), display.height()-1, WHITE);

  display.display();
  delay(2000);
  display.clearDisplay();
  delay(300);

}

float cnt=0;
void loop() {
  
//  display.setCursor(0,0);
//  display.setTextSize(2);
//  display.print("2");
//  display.setTextSize(3);
//  display.print("3");
//  display.setTextSize(4);
//  display.print("4");
//  display.setTextSize(5);
//  display.print("5");
//  display.setTextSize(6);
//  display.print("6");
//  display.setTextSize(7);
//  display.print("7");

  display.clearDisplay();  

  // Disegna il Logo FLR
  display.drawBitmap(-11, 7, fablab, 64, 64, 1);
 
  display.setTextColor( WHITE );
  display.setTextSize( 3 );
  display.setCursor( 47, 12 );
  display.println( cnt, 1 );

  cnt += 0.3;
  if( cnt > 99.9 )
    cnt=0;
  
  display.setTextSize( 2 );
  display.setCursor( 47, 45 );
  display.print( String("display: ") + String(display.width()) + "x" + String(display.height()) );
  
  display.display();
  delay(5);
}


